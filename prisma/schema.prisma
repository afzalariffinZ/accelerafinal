// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Client Request Model (from /request page)
model ClientRequest {
  id                    String   @id @default(cuid())
  requestId            String   @unique @default(cuid())
  
  // User Information
  fullName             String
  email                String
  company              String?
  phoneNumber          String?
  
  // Request Details
  requestType          String   // "feature", "integration", "consultation", etc.
  projectTitle         String
  description          String
  timeline             String?  // "urgent", "1-3 months", etc.
  budget               String?  // "under-10k", "10k-50k", etc.
  
  // Additional Details
  technicalRequirements String?
  businessGoals        String?
  currentChallenges    String?
  expectedOutcome      String?
  
  // Metadata
  status               String   @default("pending") // "pending", "reviewing", "approved", "rejected"
  priority             String   @default("medium") // "low", "medium", "high", "urgent"
  source               String   @default("website") // "website", "admin", "api"
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  @@map("client_requests")
}

// Enterprise Sales Request Model
model EnterpriseSalesRequest {
  id                   String   @id @default(cuid())
  requestId           String   @unique @default(cuid())
  
  // Company Information
  companyName         String
  industry            String?
  companySize         String?  // "1-10", "11-50", "51-200", "200+"
  annualRevenue       String?
  
  // Contact Information
  contactName         String
  contactEmail        String
  contactPhone        String?
  jobTitle            String?
  
  // Request Details
  solutionInterest    String   // "custom-development", "enterprise-license", "consulting"
  projectScope        String
  description         String
  timeline            String?
  estimatedBudget     String?
  
  // Enterprise Specific
  userCount           Int?
  integrationNeeds    String?
  complianceRequirements String?
  supportLevel        String?  // "basic", "premium", "enterprise"
  
  // Sales Information
  leadSource          String?  // "website", "referral", "cold-outreach", "event"
  salesStage          String   @default("lead") // "lead", "qualified", "proposal", "negotiation", "closed-won", "closed-lost"
  assignedSalesRep    String?
  estimatedCloseDate  DateTime?
  
  // Metadata
  status              String   @default("new") // "new", "contacted", "qualified", "proposal-sent", "closed"
  priority            String   @default("medium")
  
  // Timestamps
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  @@map("enterprise_sales_requests")
}

// AI Enhanced Request Summary Model (for AI analysis results)
model AIEnhancedRequestSummary {
  id                  String   @id @default(cuid())
  
  // Linked Request
  clientRequestId     String?  @unique
  enterpriseRequestId String?  @unique
  originalRequestType String   // "client", "enterprise"
  
  // AI Analysis Results
  complexityScore     Float?   // 1-10 scale
  feasibilityScore    Float?   // 1-10 scale
  estimatedHours      Int?
  estimatedCost       Float?
  riskAssessment      String?  // "low", "medium", "high"
  
  // AI Generated Content
  technicalSummary    String?
  businessImpact      String?
  recommendedApproach String?
  alternativeSolutions String?
  
  // AI Decision Making
  autoApprovalEligible Boolean @default(false)
  recommendedAction   String?  // "approve", "review", "reject", "request-more-info"
  confidenceLevel     Float?   // 0-1 scale
  
  // AI Workflow Tracking
  aiProcessingSteps   String[] // Array of processing steps completed
  aiModel             String?  // Which AI model was used
  processingTime      Int?     // Time in milliseconds
  
  // Business Logic Results
  revenueImpact       Float?
  resourceRequirements String?
  timelineAssessment  String?
  marketFitScore      Float?
  
  // Metadata
  status              String   @default("processed") // "processing", "processed", "error"
  processingErrors    String?
  
  // Timestamps
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  // Relations
  clientRequest       ClientRequest? @relation(fields: [clientRequestId], references: [id])
  enterpriseRequest   EnterpriseSalesRequest? @relation(fields: [enterpriseRequestId], references: [id])
  
  @@map("ai_enhanced_summaries")
}
